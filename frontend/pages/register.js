import { useFormik } from "formik";
import Image from "next/image";
import Link from "next/link";
import React, { useEffect, useState } from "react";
import Head from "next/head";
import { useCreateUserMutation } from "../redux/services/userService";
import { useRouter } from "next/router";
import Cookies from "js-cookie";
import { toast } from "react-toastify";

export default function Register() {
  const [show, setShow] = useState("password");
  const [createUser, { isLoading }] = useCreateUserMutation();
  const router = useRouter();

  const validate = (values) => {
    const errors = {};
    if (!values.email) {
      errors.email = "E-Mail alanını doldurunuz.";
    } else if (
      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i.test(values.email)
    ) {
      errors.email = "Geçersiz Email Adresi";
    }

    if (!values.password) {
      errors.password = "Şifre Alanını doldurunuz.";
    } else if (values.password.length < 8) {
      errors.password = "Şifre 8 karakterden büyük olmalıdır";
    }

    if (!values.username) {
      errors.username = "Adı Soyadı Alanını doldurunuz.";
    }
    if (!values.fullName) {
      errors.fullName = "Kullanıcı Adı Alanını doldurunuz.";
    }
    return errors;
  };

  const formik = useFormik({
    initialValues: {
      email: "",
      password: "",
      username: "",
      fullName: "",
    },
    validate,
    //kullanıcı oluşturma
    onSubmit: async (values) => {
      try {
        await createUser(values)
          .unwrap()
          .then((response) => {
            if (response.isSuccess) {
              toast.success("Kayıt Başarılı!");
              router.push("/");
            }
          });
      } catch (error) {
        console.log(error);
        toast.error(error.data.message);
      }
    },
  });
  useEffect(() => {
    const token = Cookies.get("token");
    if (token) {
      router.push("/anasayfa");
    }
  }, []);

  return (
    <>
      <Head>
        <title>Kaydol &bull; Instagram</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/instaFavicon.png" />
      </Head>
      <div className="h-screen bg-gray-50 w-full flex items-center justify-center">
        <div className="mb-10">
          <div className="border flex flex-col items-center bg-white p-8 h-[535px]  w-[330px] mb-2">
            <Image
              src="https://www.instagram.com/static/images/web/logged_out_wordmark-2x.png/d2529dbef8ed.png"
              width={200}
              height={100}
              alt="instaImage2"
            />
            <form onSubmit={formik.handleSubmit} className="mt-2 w-full ">
              <label className="block relative">
                <input
                  id="email"
                  name="email"
                  required
                  onChange={formik.handleChange}
                  value={formik.values.email}
                  onBlur={formik.handleBlur}
                  type="text"
                  className="w-full rounded-sm valid:pt-[10px] peer border-gray-200 border p-2 bg-gray-100 outline-none px-2 placeholder:text-xs"
                />
                <small className="absolute top-1/2 left-[9px] cursor-text pointer-events-none text-xs text-gray-400 -translate-y-1/2 transition-all peer-valid:text-[10px] peer-valid:top-2">
                  E-Posta
                </small>
              </label>
              <label className="block relative mt-4">
                <input
                  id="username"
                  name="username"
                  required
                  onChange={formik.handleChange}
                  value={formik.values.username}
                  onBlur={formik.handleBlur}
                  type="text"
                  className="w-full rounded-sm valid:pt-[10px] peer border-gray-200 border p-2 bg-gray-100 outline-none px-2 placeholder:text-xs"
                />
                <small className="absolute top-1/2 left-[9px] cursor-text pointer-events-none text-xs text-gray-400 -translate-y-1/2 transition-all peer-valid:text-[10px] peer-valid:top-2">
                  Adı Soyadı
                </small>
              </label>
              <label className="block relative mt-4">
                <input
                  id="fullName"
                  name="fullName"
                  required
                  onChange={formik.handleChange}
                  value={formik.values.fullName}
                  onBlur={formik.handleBlur}
                  type="text"
                  className="w-full rounded-sm valid:pt-[10px] peer border-gray-200 border p-2 bg-gray-100 outline-none px-2 placeholder:text-xs"
                />
                <small className="absolute top-1/2 left-[9px] cursor-text pointer-events-none text-xs text-gray-400 -translate-y-1/2 transition-all peer-valid:text-[10px] peer-valid:top-2">
                  Kullanıcı Adı
                </small>
              </label>
              <label className="block relative mt-4 ">
                <input
                  id="password"
                  name="password"
                  onChange={formik.handleChange}
                  value={formik.values.password}
                  onBlur={formik.handleBlur}
                  type={show}
                  required
                  className="w-full rounded-sm pr-12 valid:pt-[10px] peer border-gray-200 border p-2 bg-gray-100 outline-none px-2 placeholder:text-xs"
                />
                <small className="absolute top-1/2 left-[9px] cursor-text pointer-events-none text-xs text-gray-400 -translate-y-1/2 transition-all peer-valid:text-[10px] peer-valid:top-2">
                  Şifre
                </small>
                <small
                  onClick={() =>
                    setShow(show === "password" ? "text" : "password")
                  }
                  className="absolute cursor-pointer right-2 translate-y-1/2 text-sm font-semibold text-gray-500"
                >
                  {formik.values.password
                    ? show == "password"
                      ? "Göster"
                      : "Gizle"
                    : null}
                </small>
              </label>
              <div className="text-xs text-gray-500 mt-3">
                <h5 className="text-center">
                  Hizmetimizi kullanan kişiler senin iletişim bilgilerini
                  Instagrama yüklemiş olabilir
                </h5>
                <h5 className="mt-3 text-center">
                  Kaydolarak, Koşullarımızı, Gizlilik İlkemizi ve Çerezler
                  İlkemizi kabul etmiş olursun.
                </h5>
              </div>
              <button
                disabled={isLoading}
                type="submit"
                className={`h-[30px] bg-blue-400 rounded-md text-sm font-semibold text-white w-full mt-5 ${
                  isLoading && "bg-blue-300"
                }`}
              >
                Kaydol
              </button>
            </form>
            <div className="text-xs font-semibold text-red-500 flex flex-col mt-2 items-start justify-start p-0 w-full">
              {formik.touched.email && formik.errors.email ? (
                <div>{formik.errors.email}</div>
              ) : null}
              {formik.touched.password && formik.errors.password ? (
                <div>{formik.errors.password}</div>
              ) : null}
              {formik.touched.username && formik.errors.username ? (
                <div>{formik.errors.username}</div>
              ) : null}
              {formik.touched.fullName && formik.errors.fullName ? (
                <div>{formik.errors.fullName}</div>
              ) : null}
            </div>
          </div>
          <div className="border flex items-center bg-white p-6 justify-center text-sm h-[60px]">
            Hesabın Var mı?{" "}
            <Link href="/">
              <span className="text-blue-400 font-bold cursor-pointer">
                &nbsp;Giriş Yap
              </span>
            </Link>
          </div>
        </div>
      </div>
    </>
  );
}
